@model GoodNewsAggregator.Models.ViewModels.News.NewsListWithRssWithPagination
@using GoodNewsAggregator.HtmlHelpers
@using GoodNewsAggregator.Models.ViewModels.News

@{
    ViewData["Title"] = "News";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

<div class="row text-center">
    <h1>Новости</h1>
</div>


<div class="row">

    <partial name="_RssList" model="Model.RssList" />

    @if (User.Identity.IsAuthenticated)
    {
        <div class="col-md-4" id="aggregateDiv">
            <button class="btn btn-primary" id="aggregate">
                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="spinner"></span>
                Aggregate
            </button>
        </div>
    }
</div>

@if (User.Identity.IsAuthenticated)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}


<div id="outputField">
    @{ await Html.RenderPartialAsync("_NewsListsWithPagination",
           new NewsListWithPagination()
           {
               NewsLists = Model.NewsLists,
               Pagination = Model.Pagination
           });}
</div>





@section scripts
{

    <script src="~/js/news.js"></script>
}
